<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Моя игра on Lifelong Dream</title>
    <link>http://localhost:1313/my_game/</link>
    <description>Recent content in Моя игра on Lifelong Dream</description>
    <generator>Hugo</generator>
    <language>ru-ru</language>
    <lastBuildDate>Mon, 01 Jan 0001 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/my_game/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>http://localhost:1313/my_game/game_guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/my_game/game_guide/</guid>
      <description>&lt;h1 id=&#34;пошаговое-руководство-по-созданию-star-wars-budget-edition-10-на-sfml&#34;&gt;&lt;strong&gt;Пошаговое руководство по созданию Star Wars Budget Edition 1.0 на SFML&lt;/strong&gt;&lt;/h1&gt;&#xA;&lt;p&gt;Введение&#xA;Это руководство по созданию игры Star Wars Budget Edition 1.0.&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-подготовка-проекта&#34;&gt;&lt;strong&gt;1. Подготовка проекта&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;11-настройка-окружения&#34;&gt;&lt;strong&gt;1.1. Настройка окружения&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Установила:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Компилятор (GCC/MinGW или MSVC)&lt;/li&gt;&#xA;&lt;li&gt;Библиотеку SFML (через vcpkg или официальный установщик)&lt;/li&gt;&#xA;&lt;li&gt;IDE (VS Code, Visual Studio, CLion)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Создала структуру папок:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/SpaceInvaders&#xD;&#xA;├── Audio/&#xD;&#xA;├── Fonts/&#xD;&#xA;├── Images/&#xD;&#xA;├── include/&#xD;&#xA;└── src/&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Структура проекта&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; SpaceInvaders/&#xD;&#xA; ├── Audio/&#xD;&#xA; │   ├── back_sound.mp3&#xD;&#xA; │   ├── death_sound.mp3&#xD;&#xA; │   └── tank_shot.mp3&#xD;&#xA; ├── Fonts/&#xD;&#xA; │   └── game_font.ttf&#xD;&#xA; ├── Images/&#xD;&#xA; │   ├── bullet_v2.png&#xD;&#xA; │   ├── character_v2.png&#xD;&#xA; │   ├── deffault_enemy.png&#xD;&#xA; │   ├── spike_enemy.png&#xD;&#xA; │   └── tank_enemy.png&#xD;&#xA; ├── include/&#xD;&#xA; │   ├── Entity_class.h&#xD;&#xA; │   ├── Infinity_mode.h&#xD;&#xA; │   ├── Render.h&#xD;&#xA; │   ├── enemies.h&#xD;&#xA; │   ├── game.h&#xD;&#xA; │   ├── global_variables.h&#xD;&#xA; │   └── sounds.h&#xD;&#xA; └── src/&#xD;&#xA;     └── main.cpp&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;2-базовые-компоненты-шаг-за-шагом&#34;&gt;&lt;strong&gt;2. Базовые компоненты (шаг за шагом)&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;21-шаг-1-создание-entity_&#34;&gt;&lt;strong&gt;2.1. Шаг 1: Создание Entity_class.h&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// include/Entity_class.h&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#pragma once&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;SFML/Graphics.hpp&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Entity&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;protected&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; health;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sf&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Sprite sprite;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Entity(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; hp) &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; health(hp) {}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;draw&lt;/span&gt;(sf&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;RenderWindow&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; window) { window.draw(sprite); }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setSprite&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; sf&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Sprite&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; spr) { sprite &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; spr; }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getHealth&lt;/span&gt;() &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; { &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; health; }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Что делаю&lt;/strong&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/my_game/sfml_technology/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/my_game/sfml_technology/</guid>
      <description>&lt;h1 id=&#34;технология-создания-игры-space-invaders-на-c-с-использованием-sfml-подробное-исследование&#34;&gt;Технология создания игры Space Invaders на C++ с использованием SFML: подробное исследование&lt;/h1&gt;&#xA;&lt;p&gt;&lt;strong&gt;Введение: почему именно эта технология?&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Когда я впервые задумалась о создании классической аркадной игры, передо мной встал вопрос выбора технологий.&lt;/p&gt;&#xA;&lt;p&gt;Я рассматривала несколько вариантов:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Unity (C#) — мощный движок, но избыточный для простого 2D-проекта.&lt;/li&gt;&#xA;&lt;li&gt;JavaScript + HTML5 Canvas — просто, но не подходит для изучения низкоуровневых аспектов.&lt;/li&gt;&#xA;&lt;li&gt;Python + Pygame — хорош для новичков, но медленный для более сложных игр.&lt;/li&gt;&#xA;&lt;li&gt;C++ с SFML — идеальный баланс между производительностью и простотой.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;Почему я выбрала SFML?&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/my_game/technology_guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/my_game/technology_guide/</guid>
      <description>&lt;h1 id=&#34;полное-руководство-по-созданию-технологии-игры-space-invaders-на-sfml-для-начинающих&#34;&gt;&lt;strong&gt;Полное руководство по созданию технологии игры Space Invaders на SFML для начинающих&lt;/strong&gt;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;введение&#34;&gt;Введение&lt;/h2&gt;&#xA;&lt;p&gt;Это руководство предназначено для начинающих разработчиков, желающих создать классическую игру Space Invaders с нуля. Мы будем использовать:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Язык программирования: C++ (стандарт C++17)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Библиотеку: SFML 2.5 (Simple and Fast Multimedia Library)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Среду разработки: Visual Studio Code (или любая другая IDE)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;почему-sfml&#34;&gt;Почему SFML?&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Простота: Интуитивно понятный API&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Кроссплатформенность: Работает на Windows, Linux, macOS&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Поддержка мультимедиа: Графика, звук, ввод, сеть&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
